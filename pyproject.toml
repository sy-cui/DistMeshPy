[build-system]
requires = [
    "setuptools>=61.0",
    "pybind11>=2.10.0",
    "numpy>=2.0.0",
]
build-backend = "setuptools.build_meta"

[project]
name = "distmeshpy"
version = "1.1.2"
authors = [{name= "Songyuan Cui", email="cui20@illinois.edu"}]
description = "A Python implemenetation of the distmesh algorithm"
license = "GPL-3.0-or-later"
license-files = ["LICEN[CS]E*"]
readme = "README.md"
requires-python = ">=3.9"
dependencies = [
    "scipy>=1.13.0",
    "matplotlib>=3.8.0",
    "PyMCubes>=0.1.0",
    "typing-extensions>=4.5.0",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering",
]

[project.urls]
repository = "https://github.com/sy-cui/distmeshpy.git"

[tool.setuptools]
packages = ["distmeshpy", "distmeshpy.core"]

[tool.setuptools.package-data]
"distmeshpy.core" = ["*.so", "src/*.hpp"]


[project.optional-dependencies]
dev = [
  "mypy",
  "pre-commit",
]
test = [
  "pytest",
  "tox"
]
linter = [
  "ruff"
]

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
    "setup.py",
    "examples/"
]

# Same as Black.
line-length = 88
indent-width = 4

target-version = "py39"

[tool.ruff.lint]
select = [
    "A",    # Builtins
    "ANN",  # Annotations
    "ARG",  # Unused arguments
    "B",    # Bugbear
    "BLE",  # Blind except
    "C4",   # Comprehensions
    "C90",  # mccabe
    "COM",  # Commas
    "D1",   # Undocumented public elements
    "D2",   # Docstring conventions
    "D3",   # Triple double quotes
    "D4",   # Docstring text format
    "DTZ",  # Datetimes
    "EM",   # Error messages
    "ERA",  # Commented-out code
    "EXE",  # Executable
    "F",    # Pyflakes
    "FA",   # __future__ annotations
    "FLY",  # F-strings
    # "FURB", # Refurb
    "G",    # Logging format
    "I",    # Isort
    "ICN",  # Import conventions
    "INP",  # Disallow PEP-420 (Implicit namespace packages)
    "INT",  # gettext
    "ISC",  # Implicit str concat
    # "LOG",  # Logging
    "N",    # PEP-8 Naming
    "NPY",  # Numpy
    "PERF", # Unnecessary performance costs
    "PGH",  # Pygrep hooks
    "PIE",  # Unnecessary code
    "PL",   # Pylint
    "PT",   # Pytest
    "PTH",  # Use Pathlib
    "PYI",  # Stub files
    "Q",    # Quotes
    "RET",  # Return
    "RUF",  # Ruff
    "RSE",  # Raise
    "S",    # Bandit
    "SIM",  # Code simplification
    "SLF",  # Private member access
    "SLOT", # __slots__
    "T10",  # Debugger
    "T20",  # Print
    "TCH",  # Type checking
    "TID",  # Tidy imports
    "TRY",  # Exception handling
    "UP",   # Pyupgrade
    "W",    # Warnings
    "YTT",  # sys.version
]
ignore = [
    "D203",     # One blank line before class docstring
    "D212",     # Multi-line summary first line
    "PLR0913",  # Too many arguments
    "Q000",     # Single quotes found but double quotes preferred
    "COM812",   # Missing trailing comma
    "ISC001",   # Single line implicit string concatenation
    "PGH003",   # Blanket type ignore
    "PLR0915",  # Too many statements
]

fixable = ["ALL"]
unfixable = []

dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = false
docstring-code-line-length = "dynamic"